#
# genpll.awk, generate code to program
# the sdram pll (pll2)...
#
# uses the config file to get the correct
# parameters...
#
BEGIN {
  sdram = 0;
  regs = 0;
  iocr_sdram = 0;
  iocr_ebi = 0;
  iocr_uart = 0;
  iocr_trace = 0;
}

/^REGISTERS/ {
  regs = numericValue($2);
}

/^IOCR_SDRAM/ {
  iocr_sdram = iocrreg($2, $3, $4);
}

/^IOCR_EBI/ {
  iocr_ebi = iocrreg($2, $3, $4);
}

/^IOCR_UART/ {
  iocr_uart = iocrreg($2, $3, $4);
}

/^IOCR_TRACE/ {
  iocr_trace = iocrreg($2, $3, $4);
}

END {
  if (regs == 0) {
    print("can't find registers parameter!");
    exit(1);
  }

  if (iocr_sdram==0 || iocr_ebi==0 || iocr_uart==0 || iocr_trace==0) {
    print("can't find all iocr parameters:");
    print("  IOCR_SDRAM, IOCR_EBI, IOCR_UART, IOCR_TRACE");
    exit(1);
  }

  printf("\t#\n\t# autogenerated by iocontrol.awk...\n\t#\n");

  ldreg("0x40", iocr_sdram);
  ldreg("0x44", iocr_ebi);
  ldreg("0x48", iocr_uart);
  ldreg("0x4c", iocr_trace);
}

function iocrreg(bank, oc, ic) {
  if ( bank == "stripe" ) {
    iocr = 2;
  }
  else if ( bank == "pld" ) {
    iocr = 0;
  }
  else {
    printf("invalid parameter (" bank "), must be: stripe or pld\n");
    exit(1);
  }

  if ( oc == "fast" ) {
    iocr = or(iocr, lshift(1, 2));
  }
  else if ( oc == "slow" ) { }
  else if ( oc == "pci_diode") {
    iocr = or(iocr, lshift(2, 2));
  }
  else if ( oc == "open_drain") {
    iocr = or(iocr, lshift(4, 2));
  }
  else {
    printf("invalid parameter (" oc "), must be: fast, slow, pci_diode, ");
    printf("open_drain\n");
    exit(1);
  }
  
  if ( ic == "3.3V" ) {  }
  else if ( ic == "1.8V" ) {
    iocr = or(iocr, lshift(1, 5));
  }
  else if ( ic == "sstl") { 
    iocr = or(iocr, lshift(2, 5));
  }
  else {
    printf("invalid parameter (" ic "), must be 3.3V, 1.8V or sstl\n");
    exit(1);
  }
  
  return iocr;
}
